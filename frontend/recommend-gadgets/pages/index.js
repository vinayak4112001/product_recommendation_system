import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { HiSearch } from "react-icons/hi";
import { useProductsData } from "../hooks/useProductsHook";
import React from "react";

export default function Home() {
  const [name, setName] = React.useState("");
  // const data = [
  //   {
  //     id: "132793040",
  //     picture_url:
  //       "https://i.gadgets360cdn.com/products/cameras/large/1548234988_832_ricoh_pentax-k-s2-20-12mp-dslr-camera.jpg?downsize=*:180&amp;output-quality=80&amp;output-format=webp",
  //     brand: "Ricoh",
  //     product_name: "Ricoh Pentax K-S2 DSLR Camera 20.1MP, Black & Orange",
  //     model: "Pentax K-S2 20.12MP DSLR Camera",
  //     price_inr: "â‚¹ 98,201",
  //     rating: "4",
  //   },
  //   {
  //     id: "132793040",
  //     picture_url:
  //       "https://i.gadgets360cdn.com/products/cameras/large/1548234988_832_ricoh_pentax-k-s2-20-12mp-dslr-camera.jpg?downsize=*:180&amp;output-quality=80&amp;output-format=webp",
  //     brand: "Ricoh",
  //     product_name: "Ricoh Pentax K-S2 DSLR Camera 20.1MP, Black & Orange",
  //     model: "Pentax K-S2 20.12MP DSLR Camera",
  //     price_inr: "â‚¹ 98,201",
  //     rating: "4",
  //   },
  //   {
  //     id: "132793040",
  //     picture_url:
  //       "https://i.gadgets360cdn.com/products/cameras/large/1548234988_832_ricoh_pentax-k-s2-20-12mp-dslr-camera.jpg?downsize=*:180&amp;output-quality=80&amp;output-format=webp",
  //     brand: "Ricoh",
  //     product_name: "Ricoh Pentax K-S2 DSLR Camera 20.1MP, Black & Orange",
  //     model: "Pentax K-S2 20.12MP DSLR Camera",
  //     price_inr: "â‚¹ 98,201",
  //     rating: "4",
  //   },
  //   {
  //     id: "132793040",
  //     picture_url:
  //       "https://i.gadgets360cdn.com/products/cameras/large/1548234988_832_ricoh_pentax-k-s2-20-12mp-dslr-camera.jpg?downsize=*:180&amp;output-quality=80&amp;output-format=webp",
  //     brand: "Ricoh",
  //     product_name: "Ricoh Pentax K-S2 DSLR Camera 20.1MP, Black & Orange",
  //     model: "Pentax K-S2 20.12MP DSLR Camera",
  //     price_inr: "â‚¹ 98,201",
  //     rating: "4",
  //   },
  // ];

  const productsDataOnSuccess = (data) => {
    console.log(
      "Perform side effect after data fetching like setting an alert"
    );
  };

  const productsDataOnError = (error) => {
    console.log(
      "Pefrom side effect on error (like setting an erro) => ",
      error
    );
  };

  const {
    isLoading,
    data: productsData,
    isError,
    error,
    isRefetching,
    isRefetchError,
    refetch,
  } = useProductsData(name, productsDataOnSuccess, productsDataOnError);

  return (
    <div className={styles.container}>
      <Head>
        <title>Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.searchbox}>
          <input
            className={styles.searchinput}
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            placeholder="Search electronic gadgets ...."
          />
          {/* If "cancelRefetch" is true, then the current request will be cancelled before a new request is made */}
          <button
            className={styles.searchbtn}
            onClick={() => refetch({ cancelRefetch: true })}
          >
            <HiSearch />
          </button>
        </div>

        {/* "isRefetching" Is TRUE whenever a background refetch is in-flight, which does not include initial loading "isLoading". Is the same as `isFetching && !isLoading` */}
        {(isLoading || isRefetching) && <h2>Loading ....</h2>}

        {(isError || isRefetchError) && (
          <h2>Oops ! An error occurred while loading.</h2>
        )}

        {productsData && productsData.length < 1 && (
          <h2>Oops ! No data available</h2>
        )}

        {productsData && productsData.length > 0 && (
          <div className={styles.grid}>
            {productsData.map((gadget, i) => (
              <Link
                key={gadget.id + i.toString()}
                href={{
                  pathname: "/product",
                  query: { productName: gadget.product_name },
                }}
              >
                <div className={styles.card}>
                  <h2>{gadget.brand} &rarr;</h2>
                  <Image
                    alt="Mountains"
                    src={gadget.picture_url}
                    layout="responsive"
                    width={700}
                    height={475}
                  />
                  <p className={styles.product_name}>{gadget.product_name}.</p>
                </div>
              </Link>
            ))}
          </div>
        )}
      </main>
    </div>
  );
}
